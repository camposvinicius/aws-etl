name: 'Terraform Verify'

on:
  pull_request:
    branches: [main]

jobs:
  pack_deploy:
    name: Build and deploy DataLake
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
        
    - name: Build Lambda package
      run: |
        sh k8s/scripts/build_lambda_package.sh
    
    - name: HashiCorp - Setup Terraform
      uses: hashicorp/setup-terraform@v1.2.1

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Base64 on secrets
      shell: bash
      env:
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        postgres_password: ${{ secrets.POSTGRES_PASSWORD }}
        redshift_password: ${{ secrets.REDSHIFT_PASSWORD }}
        token: ${{ secrets.TOKEN }}
      run: |

        aws_access_key_id=$(echo -n "$aws_access_key_id" | base64)
        aws_secret_access_key=$(echo -n "$aws_secret_access_key" | base64)
        postgres_password=$(echo -n "$postgres_password" | base64)
        redshift_password=$(echo -n "$redshift_password" | base64)
        token=$(echo -n "$token" | base64)

        cat << 'EOF' >> k8s/secrets/keys.yml

        apiVersion: v1
        kind: Secret
        metadata:
            name: aws-credentials
            namespace: airflow
        type: Opaque
        data:
          aws_access_key_id: echo "$aws_access_key_id"
          aws_secret_access_key: echo "$aws_secret_access_key"

        ---

        apiVersion: v1
        kind: Secret
        metadata:
            name: postgres-credentials
            namespace: airflow
        type: Opaque
        data:
          postgres_password: echo "$postgres_password"

        ---

        apiVersion: v1
        kind: Secret
        metadata:
            name: redshift-credentials
            namespace: airflow
        type: Opaque
        data:
          redshift_password: echo "$redshift_password"

        ---

        apiVersion: v1
        kind: Secret
        metadata:
            name: token-credential
            namespace: airflow
        type: Opaque
        data:
          token: echo "$token"
        EOF

    - name: IaC Apply
      env:
        COMMAND_IAC: terraform
      run: |
        cd k8s/resources
        $COMMAND_IAC init
        $COMMAND_IAC validate
        $COMMAND_IAC plan